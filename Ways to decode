A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given an encoded message containing digits, determine the total number of ways to decode it.

Example :

Given encoded message "12", it could be decoded as "AB" (1 2) or "L" (12).

The number of ways decoding "12" is 2.


JAVA

public class Solution {
    public int numDecodings(String A) {
        int n=A.length();
        if(A==null||n==0)
            return 0;
        char[] c=A.toCharArray();
        
        int count=0;
        int[] dp=new int[n+1];
        Arrays.fill(dp,0);
        dp[0]=1;
        
        
        if(c[0]!='0')
        dp[1]=1;
        for(int i=2;i<=n;i++)
        {
            int fi=(int)(c[i-1])-48;
            int se=(((int)(c[i-1]))-48)+(10*(((int)(c[i-2]))-48));
           
            if(fi>=1 && fi<=9)
            dp[i]+=dp[i-1];
            
            if(se>=10 && se<=26)
            {
            dp[i]+=dp[i-2];
        }}
            
        return dp[n];
    }
}
