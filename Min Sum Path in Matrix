Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

 Note: You can only move either down or right at any point in time. 
Example :

Input : 

    [  1 3 2
       4 3 1
       5 6 1
    ]

Output : 8
     1 -> 3 -> 2 -> 1 -> 1
     
     
     
     JAVA

public class Solution {
    public int minPathSum(int[][] a) {
        
        int r=a.length;
        int c=a[0].length;
        
        
       for(int j=1;j<c;j++)
       {
           a[0][j]=a[0][j]+a[0][j-1];
       }
       for(int i=1;i<r;i++){
       
       for(int j=0;j<c;j++)
       {
           int b=0;
           
          if(j==0)
          {
          a[i][j]=a[i][j] +a[i-1][j];   
          }
          if(j>0)
          {
              b=Math.min(a[i][j-1],a[i-1][j]);
              a[i][j]=a[i][j] +b; 
          }
           
       }
       //1a[i][j]=sc.nextInt();
           
       }
       
         
        return (a[r-1][c-1]);
    }
}
